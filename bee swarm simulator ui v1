-- ui library creation
local hintmsg = Instance.new("Hint", game.CoreGui)
local attempt = tick()
hintmsg.Text = "Initializing UI Library This Can Take Up To 30 Seconds"
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/framework/master/vect0rs%20hub%20framework%20uwuware%20checkmarks", true))()
local version = "3"
local uiname = "UwU Swarm"
local ui = { }
local main = { }
local loopfunctions = { }
local loops = { }
function GetCamera()
	return workspace:FindFirstChildOfClass("Camera")
end
local mouse = game.Players.LocalPlayer:GetMouse()
local TweenService = game:GetService("TweenService")
local Plrs = game.Players
local MyPlr = Plrs.LocalPlayer
local MyChar = MyPlr.Character
local MyCam = GetCamera()
local char = game.Players.LocalPlayer.Character
local pollenLbl = game.Players.LocalPlayer.Character:FindFirstChild("ProgressLabel",true)
local Plrs = game:GetService("Players")
local Run = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local PlayerGui = game.Players.LocalPlayer.PlayerGui
local StartGui = game:GetService("StarterGui")
local Teams = game:GetService("Teams")
local g = MyPlr:FindFirstChild("PlayerGui") or MyPlr:WaitForChild("PlayerGui")
local sg = game:GetService("StarterGui")
local ps = game:GetService("Players")
local Light = game:GetService("Lighting")
local HTTP = game:GetService("HttpService")
local UserInput = game:GetService("UserInputService")
local messages_of_the_day = nil
local posIndex = 0
local angle = CFrame.Angles(0, 0, 0)
local currp = Vector3.new(0, 0, 0)

game:GetService("ScriptContext").Error:Connect(function(message)
	print("Reason: "..message)
	if message == "HttpError: ConnectFail" then
        MyPlr:Kick("Initializing Failed; Code 3 | ReJoin")
    elseif message == "attempt to index nil with 'CreateWindow'" then
        MyPlr:Kick("Initializing Failed; Code 4 | ReJoin")
	end
end)
do -- loop functions 
    function loopfunctions:LoopRunning(name)
		return loops[name].Running
	end
	function loopfunctions:CreateLoop(name, func, waitt, ...)
		if loops[name] ~= nil then return end
		loops[name] = { }
		loops[name].Running = false
		loops[name].Destroy = false
		loops[name].Loop = coroutine.create(function(...)
			while true do
				if loops[name].Running then
					func(...)
				end

				if loops[name].Destroy then
					break
				end

				if type(wait) == "userdata" then
					waitt:wait()
				else
					wait(waitt)
				end
			end
		end)
	end
	function loopfunctions:RunLoop(name, func, waitt, ...)
		if loops[name] == nil then
			if func ~= nil then
				self:CreateLoop(name, func, waitt, ...)
			end
		end

		loops[name].Running = true
		local succ, out = coroutine.resume(loops[name].Loop)
		if not succ then
			warn("Loop: " .. tostring(name) .. " ERROR: " .. tostring(out))
		end
	end
	function loopfunctions:StopLoop(name)
		if loops[name] == nil then return end

		loops[name].Running = false
	end
	function loopfunctions:DestroyLoop(name)
		if loops[name] == nil then return end

		self:StopLoop(name)
		loops[name].Destroy = true

		loops[name] = nil
	end
end
do -- loops
    loopfunctions:RunLoop("Version_Check", function()
        local data = loadstring(game:HttpGet("https://pastebin.com/raw/MhwMYaFu", true))()
        messages_of_the_day = data.messages_of_the_day
        data = data["Default UI"]
        local current_version, reason = data.version, data.reason
        if version ~= current_version then
            if data.force_kick then
                MyPlr:Kick("This script has updated, please re-connect. Current Version: " .. tostring(current_version) .. " your version: " .. version .. "\nReason: " .. reason)
            else
                library:SendNotification("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
                main:SystemChat("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
            end
        end
    end, 160)
    loopfunctions:CreateLoop("Auto Collect Pollen", function()
        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):WaitForChild("ClickEvent"):FireServer()
    end, Run.RenderStepped)
    loopfunctions:CreateLoop("Auto Sell Pollen", function()
        if tonumber(pollenLbl.Text:match("%d+"))>= tonumber(pollenLbl.Text:match("%d+$")) then
            warn("selling pollen")
            game:GetService("Players").LocalPlayer.Character:MoveTo(game:GetService("Players").LocalPlayer.SpawnPos.Value.p)
            game:GetService("ReplicatedStorage").Events.PlayerHiveCommand:FireServer("ToggleHoneyMaking")
            repeat wait(0.5) until game:GetService("Players").LocalPlayer.CoreStats.Pollen.Value < 1
            wait(8)
            if game:GetService("Players").LocalPlayer.CoreStats.Pollen.Value < 1 then
                warn("sold pollen")
            end
        end
    end, Run.RenderStepped)
    loopfunctions:CreateLoop("Auto Farm Field", function()
        posIndex=posIndex+1
        if library.flags.chosenfield == "Sun Flower Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.sunflowerfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.sunflowerfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "MushRoom Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.mushroomfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.mushroomfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Dandelion Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.dandelionfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.dandelionfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Blue Flower Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.blueflowerfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.blueflowerfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Clover Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.cloverfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.cloverfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Strawberry Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.strawberryfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.strawberryfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Spider Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.spiderfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.spiderfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Bamboo Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.bamboofieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.bamboofieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Rose Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.rosefieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.rosefieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Forest Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.treeforestfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.treeforestfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Cactus Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.cactusfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.cactusfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Pumpkin Patch" then
                if posIndex>#main.autofarmsettings.fieldpositions.pumpkinpatchfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.pumpkinpatchfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Pineapple Patch" then
                if posIndex>#main.autofarmsettings.fieldpositions.pineapplepatchfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.pineapplepatchfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "MountainTop Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.mountaintopfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.mountaintopfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Coconut Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.coconutfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.coconutfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Pepper Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.peppersfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.peppersfieldpos[posIndex]+angle.lookVector*10
        elseif library.flags.chosenfield == "Stump Field" then
                if posIndex>#main.autofarmsettings.fieldpositions.stumpfieldpos then posIndex=1 end
                currp = main.autofarmsettings.fieldpositions.stumpfieldpos[posIndex]+angle.lookVector*10
        end
        local newrootpos = CFrame.new(currp)*angle
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = newrootpos
        if tonumber(game.Players.LocalPlayer.CoreStats.Pollen.Value+1) >= tonumber(pollenLbl.Text:match("%d+$")) then
            if tonumber(pollenLbl.Text:match("%d+")) >= tonumber(pollenLbl.Text:match("%d+$")) then
                currp = nil
                game:GetService("Players").LocalPlayer.Character:MoveTo(game:GetService("Players").LocalPlayer.SpawnPos.Value.p)
                wait(1)
                game:GetService("ReplicatedStorage").Events.PlayerHiveCommand:FireServer("ToggleHoneyMaking")
                repeat wait(0.5) until game:GetService("Players").LocalPlayer.CoreStats.Pollen.Value < 1
				wait(8)
            end
        end
    end, Run.RenderStepped)
    loopfunctions:CreateLoop("Auto Gum Drops", function()
        local args = {
            ["Name"] = "Gumdrops"
        }
        game:GetService("ReplicatedStorage").Events.PlayerActivesCommand:FireServer(args)
    end, 5)
    loopfunctions:CreateLoop("Auto Coconut Drops", function()
        local args = {
            ["Name"] = "Coconut"
        }
        game:GetService("ReplicatedStorage").Events.PlayerActivesCommand:FireServer(args)
    end, 5)
    loopfunctions:CreateLoop("Auto Complete Quests", function()
        game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pepper")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Coconut")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Playtime")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Honey")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Quest")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Battle")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Ability")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Goo")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Sunflower")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Dandelion")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Mushroom")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Blue Flower")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Clover")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Spider")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Bamboo")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Strawberry")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pineapple")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pumpkin")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Cactus")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Rose")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Pine Tree")
		game.ReplicatedStorage.Events.BadgeEvent:FireServer("Collect", "Stump")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Glue Dispenser")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Free Royal Jelly Dispenser")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Blueberry Dispenser")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Strawberry Dispenser")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Treat Dispenser")
		game.ReplicatedStorage.Events.ToyEvent:FireServer("Wealth Clock")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Brown Bear")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Polar Bear")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Honey Bee")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Black Bear")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Bucko Bee")
		game.ReplicatedStorage.Events.CompleteQuestFromPool:FireServer("Riley Bee")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Brown Bear")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Polar Bear")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Honey Bee")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Black Bear")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Bucko Bee")
		game.ReplicatedStorage.Events.GiveQuestFromPool:FireServer("Riley Bee")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Treat Tutorial")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Treat Tutorial")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bonding With Bees")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bonding With Bees")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Search For A Sunflower Seed")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Search For A Sunflower Seed")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Gist Of Jellies")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Gist Of Jellies")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Search For Strawberries")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Search For Strawberries")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Binging On Blueberries")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Binging On Blueberries")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Royal Jelly Jamboree")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Royal Jelly Jamboree")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Search For Sunflower Seeds")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Search For Sunflower Seeds")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Picking Out Pineapples")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Picking Out Pineapples")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Seven To Seven")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Seven To Seven")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Mother Bears Midterm")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Mother Bears Midterm")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Eight To Eight")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Eight To Eight")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Sights On The Stars")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Sights On The Stars")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Family Final")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Family Final")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Preliminary Research")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Preliminary Research")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Biology Study")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Biology Study")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Proving The Hypothesis")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Proving The Hypothesis")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bear Botany")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bear Botany")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Kingdom Collection")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Kingdom Collection")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Defensive Adaptions")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Devensive Adaptions")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Benefits Of Technology")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Benefits Of Technology")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spider Study")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spider Study")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Roses And Weeds")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Roses And Weeds")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Blue Review")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Blue Review")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ongoing Progress")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ongoing Progress")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Red / Blue Duality")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Red / Blue Duality")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Costs Of Computation")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Costs Of Computation")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollination Practice")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollination Practice")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Optimizing Abilities")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Optimizing Abilities")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ready For Infrared")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ready For Infrared")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Breaking Down Badges")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Breaking Down Badges")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Subsidized Agriculture")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Subsidized Agriculture")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Meticulously Crafted")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Meticulously Crafted")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Smart, Not Hard")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Smart, Not Hard")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Limits of Language")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Limits of Language")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Patterns and Probability")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Patterns and Probability")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Chemical Analysis")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Chemical Analysis")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Mark Mechanics")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Mark Mechanics")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Meditating On Phenomenon")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Meditating On Phenomenon")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Beesperanto")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Beesperanto")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Hive Minded Bias")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Hive Minded Bias")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Mushroom Measurement Monotony")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Mushroom Measurement Monotony")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Power Of Information")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Power Of Information")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Testing Teamwork")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Testing Teamwork")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Epistemological Endeavor")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Epistemological Endeavor")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Egg Hunt: Panda Bear")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Egg Hunt: Panda Bear")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Lesson On Ladybugs")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Lesson On Ladybugs")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rhino Rumble")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rhino Rumble")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Beetle Battle")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Beetle Battle")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spider Slayer")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spider Slayer")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ladybug Bonker")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ladybug Bonker")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spider Slayer 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spider Slayer 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rhino Wrecking")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rhino Wrecking")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Final Showdown")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Final Showdown")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Werewolf Hunter")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Werewolf Hunter")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Skirmish with Scorpions")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Skirmish with Scorpions")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Mantis Massacre")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Mantis Massacre")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The REAL Final Showdown")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The REAL Final Showdown")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ant Arrival")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ant Arrival")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Winged Wack Attack")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Winged Wack Attack")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Fire Fighter")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Fire Fighter")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Army Ant Assault")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Army Ant Assault")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Colossal Combat")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Colossal Combat")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Eager Exterminator")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Eager Exterminator")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Leaper Lickin'")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Leaper Lickin'")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Colossal Combat 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Colossal Combat 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Outrageous Onslaught")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Outrageous Onslaught")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Royal Rumble")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Royal Rumble")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ultimate Ant Annihilation 1")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ultimate Ant Annihilation 1")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ultimate Ant Annihilation 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ultimate Ant Annihilation 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ultimate Ant Annihilation 3")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ultimate Ant Annihilation 3")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ultimate Ant Annihilation 4")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ultimate Ant Annihilation 4")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Ultimate Ant Annihilation 5")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Ultimate Ant Annihilation 5")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Star Journey 1")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Star Journey 1")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Star Journey 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Star Journey 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Star Journey 3")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Star Journey 3")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Star Journey 4")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Star Journey 4")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Star Journey 5")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Star Journey 5")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Egg Hunt: Riley Bee")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Egg Hunt: Riley Bee")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Egg Hunt: Bucko Bee")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Egg Hunt: Bucko Bee")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Sunflower Start")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Sunflower Start")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Dandelion Deed")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Dandelion Deed")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollen Fetcher")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollen Fetcher")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Red Request")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Red Request")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Into The Blue")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Into The Blue")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Variety Fetcher")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Variety Fetcher")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bamboo Boogie")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bamboo Boogie")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Red Request 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Red Request 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Cobweb Sweeper")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Cobweb Sweeper")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Leisure Loot")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Leisure Loot")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("White Pollen Wrangler")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("White Pollen Wrangler")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pineapple Picking")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pineapple Picking")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollen Fetcher 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollen Fetcher 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Weed Wacker")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Weed Wacker")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Red + Blue = Gold")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Red + Blue = Gold")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Colorless Collection")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Colorless Collection")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spirit of Springtime")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spirit of Springtime")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Weed Wacker 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Weed Wacker 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollen Fetcher 3")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollen Fetcher 3")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Lucky Landscaping")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Lucky Landscaping")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Azure Adventure")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Azure Adventure")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pink Pineapples")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pink Pineapples")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Blue Mushrooms")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Blue Mushrooms")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Cobweb Sweeper 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Cobweb Sweeper 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rojo-A-Go-Go")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rojo-A-Go-Go")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pumpkin Plower")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pumpkin Plower")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollen Fetcher 4")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollen Fetcher 4")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bouncing Around Biomes")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bouncing Around Biomes")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Blue Pineapples")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Blue Pineapples")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rose Request")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rose Request")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Search For The White Clover")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Search For The White Clover")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Stomping Grounds")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Stomping Grounds")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Collecting Cliffside")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Collecting Cliffside")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Mountain Meandering")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Mountain Meandering")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Quest Of Legends")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Quest Of Legends")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("High Altitude")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("High Altitude")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Blissfully Blue")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Blissfully Blue")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rouge Round-up")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rouge Round-up")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("White As Snow")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("White As Snow")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Solo On The Stump")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Solo On The Stump")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Colorful Craving")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Colorful Craving")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pumpkins, Please!")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pumpkins, Please!")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Smorgasbord")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Smorgasbord")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollen Fetcher 5")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollen Fetcher 5")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("White Clover Redux")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("White Clover Redux")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Strawberry Field Forever")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Strawberry Field Forever")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Tasting The Sky")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Tasting The Sky")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Whispy and Crispy")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Whispy and Crispy")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Walk Through The Woods")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Walk Through The Woods")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Get Red-y")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Get Red-y")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("One Stop On The Tip Top")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("One Stop On The Tip Top")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Blue Mushrooms 2")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Blue Mushrooms 2")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pretty Pumpkins")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pretty Pumpkins")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Black Bear, Why?")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Black Bear, Why?")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bee A Star")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bee A Star")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spirit's Starter")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spirit's Starter")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The First Offering")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The First Offering")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rules of The Road")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rules of The Road")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("QR Quest")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("QR Quest")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pleasant Pastimes")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pleasant Pastimes")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Nature's Lessons")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Nature's Lessons")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Gifts Of Life")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Gifts Of Life")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Out-Questing Questions")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Out-Questing Questions")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Forcefully Friendly")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Forcefully Friendly")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Sway Away")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Sway Away")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Memories of Memories")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Memories of Memories")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Beans Becoming")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Beans Becoming")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Do You Bee-lieve In Magic?")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Do You Bee-lieve In Magic?")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Ways Of The Winds / The Wind And Its Way")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Ways Of The Winds / The Wind And Its Way")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Beauty Duty")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Beauty Duty")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Witness Grandeur")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Witness Grandeur")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Beeternity")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Beeternity")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("A Breath Of Blue")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("A Breath Of Blue")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Glory Of Goo")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Glory Of Goo")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Tickle The Wind")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Tickle The Wind")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Rhubarb That Could Have Been")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Rhubarb That Could Have Been")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Dreams Of Being A Bee")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Dreams Of Being A Bee")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("The Sky Over The Stump")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("The Sky Over The Stump")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Space Oblivion")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Space Oblivion")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Pollenpalooza")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Pollenpalooza")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Dancing With Stick Bug")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Dancing With Stick Bug")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bean Bug Busser")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bean Bug Busser")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bombs, Blueberries, and Bean Bugs")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bombs, Blueberries, and Bean Bugs")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bean Bugs And Boosts")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bean Bugs And Boosts")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Make It Hasty")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Make It Hasty")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Total Focus")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Total Focus")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("On Your Marks")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("On Your Marks")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Look In The Leaves")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Look In The Leaves")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("What About Sprouts")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("What About Sprouts")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bean Bug Beatdown")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bean Bug Beatdown")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Bear Without Despair")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Bear Without Despair")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spirit Spree")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spirit Spree")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Echoing Call")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Echoing Call")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Spring Out Of The Mountain")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Spring Out Of The Mountain")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Goo")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Goo")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Medley")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Medley")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Mushrooms")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Mushrooms")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Picnic")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Picnic")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Pollen")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Pollen")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Rampage")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Rampage")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Roses")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Roses")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Scavenge")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Scavenge")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Skirmish")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Skirmish")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Strawberries")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Strawberries")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Tango")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Tango")
		game.ReplicatedStorage.Events.GiveQuest:FireServer("Riley Bee: Tour")
		game.ReplicatedStorage.Events.CompleteQuest:FireServer("Riley Bee: Tour")
    end, 5)
    loopfunctions:CreateLoop("Auto Feed Bees", function()
        main:feedbees()
        wait(library.flags.autofeeddelay)
    end, Run.RenderStepped)
    loopfunctions:CreateLoop("Annoy Server", function()
        game.ReplicatedStorage.Events.ToyEvent:FireServer("Red Cannon")
        tick()
        game.ReplicatedStorage.Events.ToyEvent:FireServer("Blue Cannon")
        tick()
        game.ReplicatedStorage.Events.ToyEvent:FireServer("Yellow Cannon")
        tick()
    end, Run.RenderStepped)
end
do -- main
    main.espsettings = {
        TracersLength = 500;
        CHAMSLength = 500;
        ESPLength = 10000;
        Blacklist = { };
        FriendList = { };
        Colors = {
            Enemy = Color3.fromRGB(221, 3, 255);
            Ally = Color3.fromRGB(255, 51, 255);
            Friend = Color3.fromRGB(255, 51, 255);
            Neutral = Color3.fromRGB(255,255,255);
            ColorOverride = nil;
        };
        CharAddedEvent = { };
        Mob_ESP_CHAMS_Ran_Once = false;
    };
    main.Arguments = { };
    main.codes = {
        "Wax";
        "Roof";
        "Nectar";
        "Crawlers";
        "Connoisseur";
        "Cog";
        "Buzz";
        "Bopmaster";
        "38217";
        "Wink";
        "ClubBean";
        "SecretProfileCode";
        "GumdropsForScience";
        "Sure";
        "ClubConverters";
        "Marshmallow";
        "500mil";
        "Discord100k";
        "BeesBuzz123";
        "Teespring";
        "BigBag";
        "Buoyant";
        "5mMembers";
        "Cubly";
        "RedMarket";
        "Mocito100T";
        "BillionVisits";
    };
    main.autofarmsettings = {
        fieldpositions = {
			sunflowerfieldpos = {Vector3.new(-204,3.4,142),Vector3.new(-210,3.4,174),Vector3.new(-210,3.4,200),Vector3.new(-180.844254, 4.44889355, 112.121246),Vector3.new(-236.441406, 4.44889355, 134.690735),Vector3.new(-238.670349, 4.44889355, 183.758301),Vector3.new(-233.494156, 4.44889355, 231.764771),Vector3.new(-182.337646, 4.44889355, 229.565475),Vector3.new(-182.337646, 4.44889355, 229.565475)};
			mushroomfieldpos = {Vector3.new(-98, 3.4, 129),Vector3.new(-80, 3.35, 129),Vector3.new(-34.7793465, 4.44889355, 150.38678),Vector3.new(-94.2854691, 4.44889355, 138.496277),Vector3.new(-118.706772, 4.44889355, 86.9430389),Vector3.new(-148.52124, 4.44889355, 74.6550293),Vector3.new(-94.2301483, 4.44889355, 67.8760834),Vector3.new(-32.2842216, 4.44889355, 71.484169)};
			dandelionfieldpos = {Vector3.new(-70.35,3.4,219),Vector3.new(-35,3.4,219),Vector3.new(0,3.4,219),Vector3.new(-97.73629, 4.44889355, 190.02153),Vector3.new(-77.3544312, 4.44889355, 236.316345),Vector3.new(-29.8881416, 4.44889355, 236.72995),Vector3.new(-27.4828205, 4.44889355, 206.170364),Vector3.new(14.4957857, 4.44889355, 216.792877),Vector3.new(29.7586899, 4.44889355, 193.516571)};
			blueflowerfieldpos = {Vector3.new(100,3.4,96),Vector3.new(140,3.4,96),Vector3.new(185,3.4,96),Vector3.new(146.685883, 4.44889355, 84.3220367),Vector3.new(189.442322, 4.44889355, 117.205963),Vector3.new(225.71817, 4.44889355, 70.9060974),Vector3.new(138.446686, 4.44889355, 99.7751007),Vector3.new(96.8385086, 4.44889355, 101.932587)};
			cloverfieldpos = {Vector3.new(179,32.9,216),Vector3.new(160,32.9,189),Vector3.new(138,32.9,167),Vector3.new(121.260864, 33.9488907, 152.041962),Vector3.new(168.024597, 33.9488907, 163.087616),Vector3.new(192.838455, 33.9488907, 208.535858),Vector3.new(142.594299, 33.9488907, 232.110764),Vector3.new(123.58696, 33.9488907, 237.236542)};
			strawberryfieldpos = {Vector3.new(-193,19.4,11),Vector3.new(-181,19.4,-10),Vector3.new(-162,19.4,-29),Vector3.new(-151.151672, 20.4488945, 23.0654354),Vector3.new(-158.057114, 20.4488945, -28.7274895),Vector3.new(-187.495941, 20.4488945, -44.6583099),Vector3.new(-219.227737, 20.4488945, 16.4569244),Vector3.new(-187.90921, 20.4488945, -3.01192546)};
			spiderfieldpos = {Vector3.new(-73,19.4,2),Vector3.new(-44,19.4,-21),Vector3.new(-16,19.4,7), Vector3.new(-37.3306084, 20.4488945, -23.4523811), Vector3.new(-3.27463555, 20.4488945, -33.6218796), Vector3.new(3.24734855, 20.4488945, 26.906374)};
			bamboofieldpos = {Vector3.new(92.9,20,-25.6),Vector3.new(132.9,20,-25.6),Vector3.new(172.9,20,-25.6),Vector3.new(81.4067535, 20.4488945, -9.97167206),Vector3.new(146.13382, 20.4488945, -5.13306427),Vector3.new(174.171082, 20.4488945, -39.9580307),Vector3.new(95.8893509, 20.4488926, -53.1612816),Vector3.new(71.0382919, 20.4488945, -40.0395432),Vector3.new(112.792351, 20.4488945, -29.2416935)};
			rosefieldpos = {Vector3.new(-300,20,129),Vector3.new(-322.835,20,129),Vector3.new(-350,20,129),Vector3.new(-329.9, 20, 129),Vector3.new(-308, 20, 129),Vector3.new(-282.7, 20, 129),Vector3.new(-282.7, 20, 153.8),Vector3.new(-303.3, 20, 153.8),Vector3.new(-334.8, 20, 153.8),Vector3.new(-354.9, 20, 153.8),Vector3.new(-354.9, 20, 134.6),Vector3.new(-379.2, 20, 134.6),Vector3.new(-379.2, 20, 109.8),Vector3.new(-369.3, 20, 157.7),Vector3.new(-325.1, 20, 122.7),Vector3.new(-299.1, 20, 122.7)};
			treeforestfieldpos = {Vector3.new(-310.1,65.5,-128.1),Vector3.new(-310.1,65.5,-168.1),Vector3.new(-310.1,65.5,-208.1),Vector3.new(-354.5, 67, -168.8),Vector3.new(-354.5, 67, -202.3),Vector3.new(-335.9, 67, -202.3),Vector3.new(-316, 67, -202.3),Vector3.new(-316, 67, -154.6),Vector3.new(-296.1, 67, -154.6),Vector3.new(-296.1, 67, -172.2),Vector3.new(-296.1, 67, -200.8),Vector3.new(-296.1, 67, -231.4),Vector3.new(-320.3, 67, -231.4)};
			cactusfieldpos = {Vector3.new(-159.5,68,-101.5),Vector3.new(-194.5,68,-112.5),Vector3.new(-229.5,68,-101.5),Vector3.new(-248.5, 67, -131.7),Vector3.new(-213, 67, -131.7),Vector3.new(-213, 67, -120.6),Vector3.new(-224.8, 67, -120.6),Vector3.new(-236.4, 67, -120.6),Vector3.new(-236.4, 67, -97.1),Vector3.new(-212.9, 67, -97.1),Vector3.new(-193.7, 67, -97.1),Vector3.new(-174.4, 67, -97.1),Vector3.new(-154.7, 67, -97.1),Vector3.new(-137.7, 67, -97.1),Vector3.new(-137.7, 67, -82.3),Vector3.new(-158.2, 67, -82.3)};
			pumpkinpatchfieldpos = {Vector3.new(-169,67,-183.8),Vector3.new(-186.5,67,-186.8),Vector3.new(-222,67,-183.8),Vector3.new(-222, 67, -161.4),Vector3.new(-191.8, 67, -161.4),Vector3.new(-191.8, 67, -202.9),Vector3.new(-167.1, 67, -202.9),Vector3.new(-167.1, 67, -183.3),Vector3.new(-145.1, 67, -183.3),Vector3.new(-248.5, 67, -183.3),Vector3.new(-248.5, 67, -205.4)};
			pineapplepatchfieldpos = {Vector3.new(285.3,70.2,-200),Vector3.new(260.3,70.2,-220),Vector3.new(225.3,70.2,-200),Vector3.new(260.234406, 68.4488907, -201.379333),Vector3.new(310.225342, 68.4488907, -174.562637),Vector3.new(306.466034, 68.4488907, -203.247055),Vector3.new(315.399536, 68.4488678, -239.936157),Vector3.new(270.373383, 68.4488907, -249.57283),Vector3.new(243.042053, 68.4488907, -231.98732),Vector3.new(197.202881, 68.4488907, -243.936981)};
			mountaintopfieldpos = {Vector3.new(93.2, 175.35, -188.49),Vector3.new(93.2, 175.35, -141.98),Vector3.new(59.12, 175.35, -141.98),Vector3.new(59.12, 175.35, -188.49),Vector3.new(59.12, 175.35, -173.79),Vector3.new(38.02, 175.35, -173.79),Vector3.new(38.02, 175.35, -121.99),Vector3.new(80.22, 175.35, -121.99),Vector3.new(104.02, 175.35, -121.99),Vector3.new(119.62, 175.35, -121.99),Vector3.new(119.62, 175.35, -148.89),Vector3.new(99.52, 175.35, -148.89),Vector3.new(99.52, 175.35, -164.79),Vector3.new(112.62, 175.35, -164.79),Vector3.new(112.62, 175.35, -183.99),Vector3.new(97.92, 175.35, -183.99),Vector3.new(97.92, 175.35, -205.39),Vector3.new(97.92, 175.35, -205.39)};
			coconutfieldpos = {Vector3.new(-251.643, 71.471, 428.576),Vector3.new(-251.643, 71.471, 457.676),Vector3.new(-270.443, 71.471, 457.676),Vector3.new(-270.443, 71.471, 441.576),Vector3.new(-286.743, 71.471, 441.576),Vector3.new(-286.743, 71.471, 431.976),Vector3.new(-303.543, 71.471, 431.976),Vector3.new(-303.543, 71.471, 450.076),Vector3.new(-294.443, 71.471, 480.176),Vector3.new(-266.343, 71.471, 480.176),Vector3.new(-266.343, 71.471, 462.676),Vector3.new(-237.643, 71.471, 462.676),Vector3.new(-237.643, 71.471, 485.776),Vector3.new(-256.443, 71.471, 485.776),Vector3.new(-273.243, 71.471, 485.776),Vector3.new(-301.043, 71.471, 485.776),Vector3.new(-301.043, 71.471, 500.576),Vector3.new(-275.643, 71.471, 500.576),Vector3.new(-252.243, 71.471, 500.576),Vector3.new(-231.143, 71.471, 500.576)};
			peppersfieldpos = {Vector3.new(-449.651, 123.702, 557.055),Vector3.new(-449.651, 123.702, 543.156),Vector3.new(-449.651, 123.702, 527.956),Vector3.new(-449.651, 123.702, 509.256),Vector3.new(-449.651, 123.702, 490.956),Vector3.new(-462.151, 123.702, 490.956),Vector3.new(-462.151, 123.702, 509.056),Vector3.new(-462.151, 123.702, 528.456),Vector3.new(-462.151, 123.702, 544.055),Vector3.new(-476.051, 123.702, 544.055),Vector3.new(-476.051, 123.702, 529.755),Vector3.new(-476.051, 123.702, 515.755),Vector3.new(-476.051, 123.702, 500.555),Vector3.new(-476.051, 123.702, 485.355),Vector3.new(-490.75, 123.702, 472.755),Vector3.new(-490.75, 123.702, 487.755),Vector3.new(-490.75, 123.702, 504.555),Vector3.new(-490.75, 123.702, 519.655),Vector3.new(-490.75, 123.702, 539.955),Vector3.new(-490.75, 123.702, 558.755),Vector3.new(-511.651, 123.702, 558.755),Vector3.new(-511.651, 123.702, 541.755),Vector3.new(-511.651, 123.702, 525.155),Vector3.new(-511.651, 123.702, 509.055),Vector3.new(-511.651, 123.702, 492.755),Vector3.new(-511.651, 123.702, 478.755)};
			stumpfieldpos = {Vector3.new(386.915, 95.93, -176.271),Vector3.new(393.015, 95.93, -160.971),Vector3.new(412.816, 95.93, -160.971),Vector3.new(412.816, 95.93, -145.771),Vector3.new(412.816, 95.93, -173.571),Vector3.new(412.816, 95.93, -193.971),Vector3.new(412.816, 95.93, -214.071),Vector3.new(431.716, 95.93, -214.071),Vector3.new(431.716, 95.93, -197.171),Vector3.new(431.716, 95.93, -175.971),Vector3.new(431.716, 95.93, -157.771),Vector3.new(448.416, 95.93, -176.171),Vector3.new(448.416, 95.93, -157.671),Vector3.new(448.416, 95.93, -191.471)}
		};
    };
    main.beeinfo = { };
	main.beenames = { };
	main.btypes = { };
    main.VelCap = 5;
    main.JumpBoostAmt = 0.1;
    if main.espsettings.CHAMSLength > 2048 then
        main.espsettings.CHAMSLength = 2048
    end;
    if main.espsettings.TracersLength > 2048 then
        main.espsettings.TracersLength = 2048
    end;
    splitline = Instance.new("Frame")
    main.ESPFolder = Instance.new("Folder", CoreGui)
    main.ESPFolder.Name = "ESP Stuff"
    main.ItemChams = Instance.new("Folder", main.ChamsFolder);
    main.ItemChams.Name = "ItemChams";
    main.Tracers = Instance.new("Folder", MyCam);
    main.Tracers.Name = "Tracers";
    main.PlayerESP = Instance.new("Folder", main.ESPFolder)
    main.PlayerESP.Name = "PlayerESP"
    main.ChamsFolder = Instance.new("Folder", CoreGui);
    main.ChamsFolder.Name = "Chams";
    main.ItemESP = Instance.new("Folder", main.ESPFolder)
    main.ItemESP.Name = "ItemESP"
    main.PlayerChams = Instance.new("Folder", main.ChamsFolder);
    main.PlayerChams.Name = "PlayerChams";
	main.TracerData = { };
	main.TracerMT = setmetatable(main.TracerData, {
		__newindex = function(tab, index, val)
			rawset(tab, index, val)
		end
    });
    main.vflyspeed = 1;
    main.vehicleflyspeed = 1;
    function main:Console(text)
        hintmsg.Text = text
    end
    function main:SystemChat(txt)
        sg:SetCore("ChatMakeSystemMessage",
        {
            Text = "Vect0rs; ".. txt,
            Color = Color3.new(248, 118, 37),
            Font = Enum.Font.Cartoon,
            TextSize = 18
        })
        local msg = g.Chat:GetDescendants()
        repeat
            for i, v in next, msg do
                if v:IsA("TextLabel") or v:IsA("TextButton") then
                    if v.Text == "Vect0rs; ".. txt then
                        msg = v
                    end
                end
            end
            Run.RenderStepped:wait()
        until type(msg) ~= "table"
        local n = 0
        spawn(function()
            while msg.Text == "Vect0rs; " .. txt do
                msg.TextColor3 = Color3.fromHSV(n, 0.4, 1)
                n = (n + 0.01) % 1
                Run.RenderStepped:wait()
            end
        end)
    end
    function main:SaveSettings()
        local Name = "Vect0rs Hub/Bee Swarm.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        local function Save()
        writefile(Name,game:service'HttpService':JSONEncode(Settings))
        end
        do -- visuals
            Settings.FullBright = library.flags.FullBright
            Settings.espfoldertog = library.flags.espfoldertog
            Settings.ESPTog = library.flags.ESPTog
            Settings.ChamsTog = library.flags.ChamsTog
            Settings.TracersTog = library.flags.TracersTog
        end
        do -- character
            Settings.SuperSpeed = library.flags.SuperSpeed
            Settings.SuperJump = library.flags.SuperJump
            Settings.flytog = library.flags.flytog
            Settings.vflytog = library.flags.vflytog
            Settings.characterhaxmain = library.flags.characterhaxmain
        end
        do -- miscellaneous
            Settings.lowgrav = library.flags.lowgrav
            Settings.autofarm = library.flags.autofarm
            Settings.autocollectpollen = library.flags.autocollectpollen
            Settings.autosell = library.flags.autosell
            Settings.chosenfield = library.flags.chosenfield
            Settings.autocollecttokens = library.flags.autocollecttokens
            Settings.autofeedbees = library.flags.autofeedbees
            Settings.feedbeeswith = library.flags.feeder
            Settings.feedbeeamount = library.flags.feedamount
            Settings.autofeeddelay = library.flags.autofeeddelay
            Settings.autogumdrop = library.flags.autogumdrop
            Settings.autococonutdrop = library.flags.autococonutdrop
            Settings.autocompletequests = library.flags.autocompletequests
            Settings.annoyserver = library.flags.annoyserver
        end
        do -- ui settings
            Settings.annoyshit = library.flags.annoyshit
            Settings.CursorTog = library.flags.CursorTog
            Settings.watermark = library.flags.watermark
        end
        Save()
    end
    function main:LoadSettings()
        local Name = "Vect0rs Hub/Bee Swarm.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        do -- visuals
            ui.visuals.fullbright:SetState(Settings.FullBright)
            ui.visuals.espmain:SetState(Settings.espfoldertog)
            ui.visuals.esp:SetState(Settings.ESPTog)
            ui.visuals.chams:SetState(Settings.ChamsTog)
            ui.visuals.tracers:SetState(Settings.TracersTog)
        end
        do -- character
            ui.character.charactermain:SetState(Settings.characterhaxmain)
            ui.character.superspeed:SetState(Settings.SuperSpeed)
            ui.character.superjump:SetState(Settings.SuperJump)
            ui.character.flymain:SetState(Settings.flytog)
            ui.character.vehiclefly:SetState(Settings.vflytog)
        end
        do -- miscellaneous
            ui.miscellaneous.lowgravity:SetState(Settings.lowgrav)
            ui.miscellaneous.autofarm:SetState(Settings.autofarm)
            ui.miscellaneous.autocollectpollen:SetState(Settings.autocollectpollen)
            ui.miscellaneous.autosell:SetState(Settings.autosell)
            ui.miscellaneous.chosenfield:SetValue(Settings.chosenfield)
            ui.miscellaneous.autofeedbees:SetState(Settings.autofeedbees)
            ui.miscellaneous.feedbeeswith:SetValue(Settings.feedbeeswith)
            ui.miscellaneous.feedbeeamount:SetState(Settings.feedbeeamount)
            ui.miscellaneous.autofeeddelay:SetValue(Settings.autofeeddelay)
            ui.miscellaneous.autogumdrop:SetState(Settings.autogumdrop)
            ui.miscellaneous.autococonutdrop:SetState(Settings.autococonutdrop)
            ui.miscellaneous.autocompletequests:SetState(Settings.autocompletequests)
            ui.miscellaneous.annoyserver:SetState(Settings.annoyserver)
        end
        do -- ui settings
            main.uisettings.annoyingstuff:SetState(Settings.annoyshit)
            main.uisettings.cursor:SetState(Settings.CursorTog)
            main.uisettings.watermark:SetState(Settings.watermark)
        end
    end
    function main:AutoLoadSettings()
        local Name = "Vect0rs Hub/Bee Swarm.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        game.CoreGui.uwuware.watermark.Text.MouseButton1Down:Connect(function()
            main:LoadSettings()
        end)
    end
    function main:fullbright()
        if library.flags.FullBright then
            local bloom = Instance.new("BloomEffect");
            bloom.Enabled = true;
            bloom.Intensity = 0.55;
            bloom.Size = 30;
            bloom.Threshold = 0.95;
            bloom.Parent = game.Lighting;
            local colorcorrection = Instance.new("ColorCorrectionEffect");
            colorcorrection.Enabled = true;
            colorcorrection.Brightness = 0;
            colorcorrection.Contrast = 0;
            colorcorrection.Saturation = 1;
            colorcorrection.TintColor = Color3.fromRGB(255,255,255);
            colorcorrection.Parent = game.Lighting;
            local sunrays = Instance.new("SunRaysEffect");
            sunrays.Enabled = true;
            sunrays.Intensity = 0.4;
            sunrays.Spread = 1;
            sunrays.Parent = game.Lighting;
        else
            for i,v in pairs(game.Lighting:GetChildren()) do
                if v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                    v:Destroy();
                end
            end
        end
    end
    function main:GetSizeOfObject(Obj)
        if Obj:IsA("BasePart") then
            return Obj.Size
        elseif Obj:IsA("Model") then
            return Obj:GetExtentsSize()
        end
    end
    function main:GetTeamColor(Plr)
        if Plr == nil then return nil end
        if not Plr:IsA("Player") then
            return nil
        end
        local PickedColor = main.espsettings.Colors.Enemy
        if Plr ~= nil then
            if game.PlaceId == 606849621 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if not library.flags["FreeForAll"] then
                        if MyPlr.Team ~= nil and Plr.Team ~= nil then
                            if main.FriendList[Plr.Name] == nil then
                                if MyPlr.Team.Name == "Prisoner" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Criminal" then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        PickedColor = main.espsettings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Criminal" then
                                    if Plr.Team == MyPlr.Team or Plr.Team.Name == "Prisoner" then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        PickedColor = main.espsettings.Colors.Enemy
                                    end
                                elseif MyPlr.Team.Name == "Police" then
                                    if Plr.Team == MyPlr.Team then
                                        PickedColor = main.espsettings.Colors.Ally
                                    else
                                        if Plr.Team.Name == "Criminal" then
                                            PickedColor = main.espsettings.Colors.Enemy
                                        elseif Plr.Team.Name == "Prisoner" then
                                            PickedColor = main.espsettings.Colors.Neutral
                                        end
                                    end
                                end
                            else
                                PickedColor = main.espsettings.Colors.Friend
                            end
                        end
                    else
                        if main.FriendList[Plr.Name] ~= nil then
                            PickedColor = main.espsettings.Colors.Friend
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 155615604 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr.Team ~= nil and Plr.Team ~= nil then
                        if main.espsettings.FriendList[Plr.Name] == nil then
                            if MyPlr.Team.Name == "Inmates" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" or Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            elseif MyPlr.Team.Name == "Guards" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Neutral
                                elseif Plr.Team.Name == "Criminals" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                elseif Plr.Team.Name == "Guards" then
                                    PickColor = main.espsettings.Colors.Ally
                                end
                            elseif MyPlr.Team.Name == "Criminals" then
                                if Plr.Team.Name == "Inmates" then
                                    PickedColor = main.espsettings.Colors.Ally
                                elseif Plr.Team.Name == "Guards" then
                                    PickedColor = main.espsettings.Colors.Enemy
                                else
                                    PickedColor = main.espsettings.Colors.Neutral
                                end
                            end
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 746820961 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("TeamC") and Plr:FindFirstChild("TeamC") then
                        if Plr.TeamC.Value == MyPlr.TeamC.Value then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1382113806 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if MyPlr:FindFirstChild("role") and Plr:FindFirstChild("role") then
                        if MyPlr.role.Value == "assassin" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Enemy
                            elseif Plr.role.Value == "guard" then
                                PickedColor = Color3.new(1, 135 / 255, 0)
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "target" then
                            if Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        elseif MyPlr.role.Value == "guard" then
                            if Plr.role.Value == "target" then
                                PickedColor = main.espsettings.Colors.Friend
                            elseif Plr.role.Value == "guard" then
                                PickedColor = main.espsettings.Colors.Ally
                            elseif Plr.role.Value == "assassin" then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            if MyPlr.role.Value == "none" then
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 1072809192 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
                        if Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif MyPlr.Backpack:FindFirstChild("Revolver") or MyChar:FindFirstChild("Revolver") then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 142823291 or game.PlaceId == 1122507250 then
                if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
                    if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
                        if (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = Color3.new(1, 135 / 255, 0)
                        end
                    elseif (MyPlr.Backpack:FindFirstChild("Gun") or MyPlr.Backpack:FindFirstChild("Revolver")) or (MyChar:FindFirstChild("Gun") or MyChar:FindFirstChild("Revolver")) then
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        else
                            PickedColor = main.espsettings.Colors.Ally
                        end
                    else
                        if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    end
                end
            elseif game.PlaceId == 379614936 then
                if main.espsettings.Colors.ColorOverride == nil then
                    if not main.espsettings.FriendList[Plr.Name] then
                        local targ = MyPlr:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui"):FindFirstChild("UI"):FindFirstChild("Target"):FindFirstChild("Img"):FindFirstChild("PlayerText")
                        if targ then
                            if Plr.Name:lower() == targ.Text:lower() then
                                PickedColor = main.espsettings.Colors.Enemy
                            else
                                PickedColor = main.espsettings.Colors.Neutral
                            end
                        else
                            PickedColor = main.espsettings.Colors.Neutral
                        end
                    else
                        PickedColor = main.espsettings.Colors.Friend
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            elseif game.PlaceId == 983224898 then
                if (tick() - wildrevolvertick) > 10 or wildrevolverteamdata == nil then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
                local succ = pcall(function()
                    if wildrevolverteamdata[Plr.Name] ~= nil then
                        if main.espsettings.Colors.ColorOverride == nil then
                            if not main.espsettings.FriendList[Plr.Name] then
                                if wildrevolverteamdata[Plr.Name]["TeamName"] == wildrevolverteamdata[MyPlr.Name]["TeamName"] then
                                    PickedColor = main.espsettings.Colors.Ally
                                else
                                    PickedColor = main.espsettings.Colors.Enemy
                                end
                            else
                                PickedColor = main.espsettings.Colors.Friend
                            end
                        else
                            PickedColor = main.espsettings.Colors.ColorOverride
                        end
                    else
                        PickedColor = main.espsettings.Colors.Neutral
                    end
                end)
                if not succ then
                    wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
                    wildrevolvertick = tick()
                    return main.espsettings.Colors.Neutral
                end
            else
                if main.espsettings.Colors.ColorOverride == nil then
                    if not library.flags["FreeForAll"] then
                        if MyPlr.Team ~= Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Enemy
                        elseif MyPlr.Team == Plr.Team and not main.espsettings.FriendList[Plr.Name] then
                            PickedColor = main.espsettings.Colors.Ally
                        else
                            PickedColor = main.espsettings.Colors.Friend
                        end
                    else
                        if main.espsettings.FriendList[Plr.Name] ~= nil then
                            PickedColor = main.espsettings.Colors.Friend
                        else
                            PickedColor = main.espsettings.Colors.Enemy
                        end
                    end
                else
                    PickedColor = main.espsettings.Colors.ColorOverride
                end
            end
        end
        return PickedColor
    end
    function main:CreateESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            local GetChar = ((IsPlr) and Obj.Character) or Obj
            local Head = GetChar:FindFirstChild("Head")
            local t = tick()
            if IsPlr then UseFolder = main.PlayerESP end
            if Head == nil then
                repeat
                    Head = GetChar:FindFirstChild("Head")
                    wait()
                until Head ~= nil or (tick() - t) >= 10
            end
            if Head == nil then return end
            
            local bb = Instance.new("BillboardGui")
            bb.Adornee = Head
            bb.ExtentsOffset = Vector3.new(0, 1, 0)
            bb.AlwaysOnTop = true
            bb.Size = UDim2.new(0, 5, 0, 5)
            bb.StudsOffset = Vector3.new(0, 3, 0)
            bb.Name = "ESP Crap_" .. Obj.Name
            bb.Parent = UseFolder
            
            local frame = Instance.new("Frame", bb)
            frame.ZIndex = 10
            frame.BackgroundTransparency = 1
            frame.Size = UDim2.new(1, 0, 1, 0)
            
            local TxtName = Instance.new("TextLabel", frame)
            TxtName.Name = "Names"
            TxtName.ZIndex = 10
            TxtName.Text = Obj.Name
            TxtName.BackgroundTransparency = 1
            TxtName.Position = UDim2.new(0, 0, 0, -45)
            TxtName.Size = UDim2.new(1, 0, 10, 0)
            TxtName.Font = "SourceSansBold"
            TxtName.TextSize = 13
            TxtName.TextStrokeTransparency = 0.5
  
            local TxtDist = nil
            local TxtHealth = nil
            if IsPlr then
                TxtDist = Instance.new("TextLabel", frame)
                TxtDist.Name = "Dist"
                TxtDist.ZIndex = 10
                TxtDist.Text = ""
                TxtDist.BackgroundTransparency = 1
                TxtDist.Position = UDim2.new(0, 0, 0, -35)
                TxtDist.Size = UDim2.new(1, 0, 10, 0)
                TxtDist.Font = "SourceSansBold"
                TxtDist.TextSize = 13
                TxtDist.TextStrokeTransparency = 0.5
  
                TxtHealth = Instance.new("TextLabel", frame)
                TxtHealth.Name = "Health"
                TxtHealth.ZIndex = 10
                TxtHealth.Text = ""
                TxtHealth.BackgroundTransparency = 1
                TxtHealth.Position = UDim2.new(0, 0, 0, -25)
                TxtHealth.Size = UDim2.new(1, 0, 10, 0)
                TxtHealth.Font = "SourceSansBold"
                TxtHealth.TextSize = 13
                TxtHealth.TextStrokeTransparency = 0.5
            else
                local ObjVal = Instance.new("ObjectValue", bb)
                ObjVal.Value = Obj
            end
            
            local PickColor = main:GetTeamColor(Obj) or main.espsettings.Colors.Neutral
            TxtName.TextColor3 = PickColor
  
            if IsPlr then
                TxtDist.TextColor3 = PickColor
                TxtHealth.TextColor3 = PickColor
            end
        end
    end
    function main:RemoveESP(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemESP
            if IsPlr then UseFolder = main.PlayerESP end
            local FindESP = ((IsPlr) and UseFolder:FindFirstChild("ESP Crap_" .. Obj.Name)) or main:FindESP(Obj)
            if FindESP then
                FindESP:Destroy()
            end
        end
    end
    function main:UpdateESP(Plr)
        if Plr ~= nil then
            local Find = main.PlayerESP:FindFirstChild("ESP Crap_" .. Plr.Name)
            if Find then
                local PickColor = main:GetTeamColor(Plr)
                Find.Frame.Names.TextColor3 = PickColor
                Find.Frame.Dist.TextColor3 = PickColor
                Find.Frame.Health.TextColor3 = PickColor
                --Find.Frame.Pos.TextColor3 = PickColor
                local GetChar = Plr.Character
                if MyChar and GetChar then
                    local Find2 = MyChar:FindFirstChild("HumanoidRootPart")
                    local Find3 = GetChar:FindFirstChild("HumanoidRootPart")
                    local Find4 = GetChar:FindFirstChildOfClass("Humanoid")
                    if Find2 and Find3 then
                        local pos = Find3.Position
                        local Dist = (Find2.Position - pos).magnitude
                        if Dist > main.espsettings.ESPLength or main.espsettings.Blacklist[Plr.Name] then
                            Find.Frame.Names.Visible = false
                            Find.Frame.Dist.Visible = false
                            Find.Frame.Health.Visible = false
                            return
                        else
                            Find.Frame.Names.Visible = true
                            Find.Frame.Dist.Visible = true
                            Find.Frame.Health.Visible = true
                        end
                        Find.Frame.Dist.Text = "Distance: " .. string.format("%.0f", Dist)
                        --Find.Frame.Pos.Text = "(X: " .. string.format("%.0f", pos.X) .. ", Y: " .. string.format("%.0f", pos.Y) .. ", Z: " .. string.format("%.0f", pos.Z) .. ")"
                        if Find4 then
                            Find.Frame.Health.Text = "Health: " .. string.format("%.0f", Find4.Health)
                        else
                            Find.Frame.Health.Text = ""
                        end
                    end
                end
            end
        end
    end
    function main:FindESP(Obj)
        for i, v in next, main.ItemESP:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:FindCham(Obj)
        for i, v in next, main.ItemChams:GetChildren() do
            if v.className == "ObjectValue" then
                if v.Value == Obj then
                    return v.Parent
                end
            end
        end
        return nil
    end
    function main:UpdateChams(Obj)
        if Obj == nil then return end

        if Obj:IsA("Player") then
            local Find = PlayerChams:FindFirstChild(Obj.Name)
            local GetChar = Obj.Character
  
            local Trans = 0
            if GetChar and MyChar then
                local GetHead = GetChar:FindFirstChild("Head")
                local GetTor = GetChar:FindFirstChild("HumanoidRootPart")
                local MyHead = MyChar:FindFirstChild("Head")
                local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
                if GetHead and GetTor and MyHead and MyTor then
                    if (MyTor.Position - GetTor.Position).magnitude > settings.CHAMSLength or settings.Blacklist[Obj.Name] then
                        Trans = 1
                    else
                        --local MyCharStuff = MyChar:GetDescendants()
                        local Ray = Ray.new(MyCam.CFrame.p, (GetTor.Position - MyCam.CFrame.p).unit * 2048)
                        local part = workspace:FindPartOnRayWithIgnoreList(Ray, {MyChar})
                        if part ~= nil then
                            if part:IsDescendantOf(GetChar) then
                                Trans = 0.9
                            else
                                Trans = 0
                            end
                        end
                    end
                end
            end
  
            if Find then
                for i, v in next, Find:GetChildren() do
                    if v.className ~= "ObjectValue" then
                        v.Color3 = main.GetTeamColor(Obj) or main.espsettings.Colors.Neutral
                        v.Transparency = Trans
                    end
                end
            end
        end
    end
    function main:RemoveChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            if IsPlr then UseFolder = main.PlayerChams end
            local FindC = UseFolder:FindFirstChild(tostring(Obj)) or main:FindCham(Obj)
            if FindC then
                FindC:Destroy()
            end
        end
    end
    function main:CreateChams(Obj)
        if Obj ~= nil then
            local IsPlr = Obj:IsA("Player")
            local UseFolder = main.ItemChams
            local Crap = nil
            local GetTor = nil
            local t = tick()
            if IsPlr then
                Obj = Obj.Character
                UseFolder = main.PlayerChams
            end
            if Obj == nil then return end
            GetTor = Obj:FindFirstChild("HumanoidRootPart") or Obj:WaitForChild("HumanoidRootPart")
            if IsPlr then Crap = Obj:GetChildren() else Crap = Obj:GetDescendants() end
  
            local FindC = ((IsPlr) and UseFolder:FindFirstChild(Obj.Name)) or main:FindCham(Obj)
            if not FindC then
                FindC = Instance.new("Folder", UseFolder)
                FindC.Name = Obj.Name
                local ObjVal = Instance.new("ObjectValue", FindC)
                ObjVal.Value = Obj
            end
  
            for _, P in next, Crap do
                if P:IsA("PVInstance") and P.Name ~= "HumanoidRootPart" then
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Size = main:GetSizeOfObject(P)
                    Box.Name = "Cham"
                    Box.Adornee = P
                    Box.AlwaysOnTop = true
                    Box.ZIndex = 5
                    Box.Transparency = 0
                    Box.Color3 = ((IsPlr) and main:GetTeamColor(Plrs:GetPlayerFromCharacter(Obj))) or main.espsettings.Colors.Neutral
                    Box.Parent = FindC
                end
            end
        end
    end
    function main:UpdateTracer(Plr)
        if library.flags.TracersTog then
            if MyChar then
                local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
                local GetTor = main.TracerData[Plr.Name]
                if MyTor and GetTor ~= nil and GetTor.Parent ~= nil then
                    local Dist = (MyTor.Position - GetTor.Position).magnitude
                    if (Dist < main.espsettings.TracersLength and not main.espsettings.Blacklist[Plr.Name]) and not (MyChar:FindFirstChild("InVehicle") or GetTor.Parent:FindFirstChild("InVehicle")) then
                        if not main.espsettings.PlaceTracersUnderCharacter then
                            local R = MyCam:ScreenPointToRay(MyCam.ViewportSize.X / 2, MyCam.ViewportSize.Y, 0)
                            Dist = (R.Origin - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(R.Origin, (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.001, 0.001, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        else
                            Dist = (MyTor.Position - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
                            main.Tracers[Plr.Name].Transparency = 1
                            main.Tracers[Plr.Name].Size = Vector3.new(0.3, 0.3, Dist)
                            main.Tracers[Plr.Name].CFrame = CFrame.new(MyTor.Position - Vector3.new(0, 3, 0), (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
                            main.Tracers[Plr.Name].BrickColor = BrickColor.new(main:GetTeamColor(Plr))
                            main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
                            main.Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.05, 0.05, Dist)
                            main.Tracers[Plr.Name].BoxHandleAdornment.Color3 = main:GetTeamColor(Plr)
                        end
                    else
                        main.Tracers[Plr.Name].Transparency = 1
                        main.Tracers[Plr.Name].BoxHandleAdornment.Transparency = 1
                    end
                end
            end
        end
    end
    function main:RemoveTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if Find then
            Find:Destroy()
        end
    end
    function main:CreateTracers(Plr)
        local Find = main.Tracers:FindFirstChild(Plr.Name)
        if not Find then
            local P = Instance.new("Part")
            P.Name = Plr.Name
            P.Material = "Neon"
            P.Transparency = 1
            P.Anchored = true
            P.Locked = true
            P.CanCollide = false
            local B = Instance.new("BoxHandleAdornment", P)
            B.Adornee = P
            B.Size = main:GetSizeOfObject(P)
            B.AlwaysOnTop = true
            B.ZIndex = 5
            B.Transparency = 0
            B.Color3 = main:GetTeamColor(Plr) or main.espsettings.Colors.Neutral
            P.Parent = main.Tracers
  
            coroutine.resume(coroutine.create(function()
                while main.Tracers:FindFirstChild(Plr.Name) do
                    main:UpdateTracer(Plr)
                    Run.RenderStepped:wait()
                end
            end))
        end
    end
    function main:updatecolors()
        do
            if library.flags["ESPTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveESP(v)
                        main:CreateESP(v)
                    end
                end
            else return end
            if library.flags["ChamsTog"] then
                for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                                    repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                    main.TracerMT[v.Name] = Char.HumanoidRootPart
                                    end)
                                end
                        main:RemoveChams(v)
                        main:CreateChams(v)
                    end
                end
            else return end
        end
    end
    function main:esptoggle()
        if library.flags.ESPTog then
            for _, v in next, Plrs:GetPlayers() do
                    if v ~= MyPlr then
                        if main.espsettings.CharAddedEvent[v.Name] == nil then
                            main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ESPTog then
                                main:RemoveESP(v)
                                main:CreateESP(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                                main.TracerMT[v.Name] = Char.HumanoidRootPart
                            end)
                        end
                    main:RemoveESP(v)
                    main:CreateESP(v)
                end
            end
        else
            main.PlayerESP:ClearAllChildren()
            main.ItemESP:ClearAllChildren()
        end
    end
    function main:chamstoggle()
        if library.flags.ChamsTog then
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags.ChamsTog then
                                main:RemoveChams(v)
                                main:CreateChams(v)
                            end
                            repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                            main.TracerMT[v.Name] = Char.HumanoidRootPart
                        end)
                    end
                    main:RemoveChams(v)
                    main:CreateChams(v)
                end
            end
            else
            main.PlayerChams:ClearAllChildren()
            main.ItemChams:ClearAllChildren()
        end
    end
    function main:tracerstoggle()
        if library.flags["TracersTog"] then
            warn("tracers enabled")
            for _, v in next, Plrs:GetPlayers() do
                if v ~= MyPlr then
                    if main.espsettings.CharAddedEvent[v.Name] == nil then
                        main.espsettings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
                            if library.flags["TracersTog"] then
                                main:RemoveTracers(v)
                                main:CreateTracers(v)
                            end
                        end)
                    end
                    if v.Character ~= nil then
                    local Tor = v.Character:FindFirstChild("HumanoidRootPart")
                        if Tor then
                            main.TracerMT[v.Name] = Tor
                        end
                    end
                    main:RemoveTracers(v)
                    main:CreateTracers(v)
                end
            end
            else
            warn("tracers disabled")
            for _, v in next, Plrs:GetPlayers() do
                main:RemoveTracers(v)
            end
        end
    end
    function main:MainESP()
        if library.flags["espfoldertog"] then
            ui.visuals.esp:SetState(true)
            main:esptoggle()
            ui.visuals.chams:SetState(true)
            main:chamstoggle()
            ui.visuals.tracers:SetState(true)
            main:tracerstoggle()
        else
            ui.visuals.esp:SetState(false)
            main:esptoggle()
            ui.visuals.chams:SetState(false)
            main:chamstoggle()
            ui.visuals.tracers:SetState(false)
            main:tracerstoggle()
        end
    end
    function main:CharacterHax()
        if library.flags["characterhaxmain"] then
            ui.character.superspeed:SetState(true)
            main:superspeed()
            ui.character.superjump:SetState(true)
            main:superjump()
        else
            ui.character.superspeed:SetState(false)
            main:superspeed()
            ui.character.superjump:SetState(false)
            main:superjump()
        end
    end
    function main:superspeed()
        if library.flags.SuperSpeed then
            MyChar.Humanoid.WalkSpeed = 90
        else
            MyChar.Humanoid.WalkSpeed = 16
        end
    end
    function main:superjump()
        if library.flags.SuperJump then
            MyChar.Humanoid.JumpPower = 150
        else
            MyChar.Humanoid.JumpPower = 50
        end
    end
    function main:walkspeed(value)
        MyChar.Humanoid.WalkSpeed = value
    end
    function main:jumppower(value)
        MyChar.Humanoid.JumpPower = value
    end
    function main:flyenable(vfly)
        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
        repeat wait() until mouse
  
        local T = game.Players.LocalPlayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
        local SPEED = 0
  
        local function FLY()
            library.flags["flytog"] = true
            local BG = Instance.new('BodyGyro', T)
            local BV = Instance.new('BodyVelocity', T)
            BG.P = 9e4
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(function()
                repeat wait()
                if not vfly then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = 50
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                    lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
                    BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.velocity = Vector3.new(0, 0, 0)
                end
                BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not library.flags["flytog"]
                CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
                game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end)
        end
        mouse.KeyDown:connect(function(KEY)
            if KEY:lower() == 'w' then
                if vfly then
                    CONTROL.F = main.vehicleflyspeed
                else
                    CONTROL.F = main.vflyspeed
                end
            elseif KEY:lower() == 's' then
                if vfly then
                    CONTROL.B = - main.vehicleflyspeed
                else
                    CONTROL.B = - main.vflyspeed
                end
            elseif KEY:lower() == 'a' then
                if vfly then
                    CONTROL.L = - main.vehicleflyspeed
                else
                    CONTROL.L = - main.vflyspeed
                end
            elseif KEY:lower() == 'd' then
                if vfly then
                    CONTROL.R = main.vehicleflyspeed
                else
                    CONTROL.R = main.vflyspeed
                end
            elseif KEY:lower() == 'e' then
                if vfly then
                    CONTROL.Q = main.vehicleflyspeed*2
                else
                    CONTROL.Q = main.vflyspeed*2
                end
            elseif KEY:lower() == 'q' then
                if vfly then
                    CONTROL.E = -main.vehicleflyspeed*2
                else
                    CONTROL.E = -main.vflyspeed*2
                end
            end
        end)
        mouse.KeyUp:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            elseif KEY:lower() == 'e' then
                CONTROL.Q = 0
            elseif KEY:lower() == 'q' then
                CONTROL.E = 0
            end
        end)
        FLY()
    end
    function main:flydisable()
        library.flags["flytog"] = false
        game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false  
    end
    function main:flytoggle()
        if library.flags["flytog"] then
            if library.flags["vflytog"] then
                main:flydisable()
                main:flyenable(true)
            else
                main:flydisable()
                main:flyenable()
            end
        else
            main:flydisable()
        end
    end
    function main:flyspeed(value)
        main.vflyspeed = tonumber(value)
        main.vehicleflyspeed = tonumber(value)
    end
    function main:GetInstance(String)
        local Table = string.split(String, ".")
        local Service = game:GetService(Table[1])
        
        local ObjectSoFar = Service
        for Index, Value in pairs(Table) do
            if Index ~= 1 then -- Don't run over the service.
                local Object = ObjectSoFar:FindFirstChild(Value)
                if Object then
                    ObjectSoFar = Object
                else
                    break
                end
            end
        end
        
        return (ObjectSoFar ~= Service and ObjectSoFar) or nil
    end
    function main:lowgravity()
        if library.flags["lowgrav"] then
            workspace.Gravity = 50
        else
            workspace.Gravity = 196
        end
    end
    function main:gravity(val)
        workspace.Gravity = val
    end
    function main:ClaimCodes()
        for i,v in pairs(main.codes) do
            game:GetService("ReplicatedStorage").Events.PromoCodeEvent:FireServer(v)
        end
    end
    function main:AutoFarm()
        if library.flags.autofarm then
            ui.miscellaneous.autocollectpollen:SetState(true)
            ui.miscellaneous.autosell:SetState(true)
            loopfunctions:RunLoop("Auto Farm Field")
        else
            ui.miscellaneous.autocollectpollen:SetState(false)
            ui.miscellaneous.autosell:SetState(false)
            loopfunctions:StopLoop("Auto Farm Field")
        end
    end
    function main:AutoCollectPollen()
        if library.flags.autocollectpollen then
            loopfunctions:RunLoop("Auto Collect Pollen")
        else
            loopfunctions:StopLoop("Auto Collect Pollen")
        end
    end
    function main:AutoSellPollen()
        if library.flags.autosell then
            loopfunctions:RunLoop("Auto Sell Pollen")
        else
            loopfunctions:StopLoop("Auto Sell Pollen")
        end
    end
    function main:AutoCollectTokens()
        workspace.Collectibles.ChildAdded:Connect(function(part)
            if library.flags.autocollecttokens then
                local root = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                local rootpos = root.CFrame
                if tostring(part) == tostring(game.Players.LocalPlayer.Name) or tostring(part) == "C" then
                    if (part.Position-root.Position).magnitude <= 50 then
                        root.CFrame = CFrame.new(part.Position.x, part.Position.y, part.Position.z)
                        wait(0.07)
                        root.CFrame = rootpos
                        wait(0.05)
                    end
                end
            end
        end)
    end
    function main:AutoGumDrop()
        if library.flags.autogumdrops then
            loopfunctions:RunLoop("Auto Gum Drops")
        else
            loopfunctions:StopLoop("Auto Gum Drops")
        end
    end
    function main:AutoCoconutDrop()
        if library.flags.autococonutdrops then
            loopfunctions:RunLoop("Auto Coconut Drops")
        else
            loopfunctions:StopLoop("Auto Coconut Drops")
        end
    end
    function main:AutoCompleteQuests()
        if library.flags.autocompletequests then
            loopfunctions:RunLoop("Auto Complete Quests")
        else
            loopfunctions:StopLoop("Auto Complete Quests")
        end
    end
    function main:load()
        Pepsi, dbg = Pepsi, dbg
        if not Pepsi then -- Loser
            loadstring(rawget(rawget(game:GetObjects("rbxassetid://3554165973"), 0X1):GetDescendants(), 0X1).ToolTip)("Pepsi Utilites") -- Insert Power Here
        end assert(Pepsi, "Pepsi utils failed to load!") pcall(spawn, function()if (true or 2 == shared.devmode) and dbg.attach then pcall(dbg.attach, "pepsiswarm")end end)
    end
    local function getstats(item, pulltime)
        local tab = main.lastpull
        if not tab or not main.seriouslastpull or time() - main.seriouslastpull > tonumber(pulltime or 3) then
            tab = game.ReplicatedStorage.Events.RetrievePlayerStats:InvokeServer()
            main.seriouslastpull = time()
        end
        if not tab or type(tab) ~= "table" then
            tab = game.ReplicatedStorage.Events.RetrievePlayerStats:InvokeServer()
            main.seriouslastpull = time()
        end
        main.lastpull = tab -- If only credit reports worked this way. Just cahce the last good copy of your credit report lol.
        if item and type(tab) == "table" then
            return rawget(tab, item)
        end
        return tab
    end
    local function getbees()
        local hc = getstats("Honeycomb", 0X14)
        if not hc then
            return {}
        end
        local bees = {}
        for x, collum in pairs(hc) do
            for y, bee in pairs(collum) do
                bee.Cell = {
                    x = string.num(x),
                    y = string.num(y)
                }
                table.insert(bees, bee)
            end
        end
        return table.sort(bees, function(a, b)
            return a.Bond < b.Bond
        end) or {}
    end
    function main:feedbees(num)
        num = tonumber(num or 1) or 1
        if library.flags.autofeedbees then
            local feeder = library.flags.feeder
            if feeder == "Auto" or feeder == "Favorite" then
                local qty = 0
                local items = getstats("Eggs", 30)
                for _, item in pairs({
                    "SunflowerSeed",
                    "Blueberry",
                    "Strawberry",
                    "Pineapple",
                    "Treat"
                }) do
                    if items[item] > qty then
                        feeder, qty = item, items[item]
                    end
                end
            end
            local bees = getbees()
            for b = 1, num do
                local bee = table.remove(bees, 1)
                feeder = (library.flags.feeder == "Favorite" and Pepsi.Obj(main.beeinfo, bee.Type, "Tastes", "Treats", "Likes", 1)) or feeder
                if bee and bee.Cell and bee.Cell.x and bee.Cell.y then
                    game.ReplicatedStorage.Events.ConstructHiveCellFromEgg:InvokeServer(bee.Cell.x, bee.Cell.y, tostring(feeder or library.flags.feeder or "Treat"), tonumber(library.flags.feedamount or 1))
                end
            end
        end
    end
    function main:AutoFeedBees()
        if library.flags.autofeedbees then
            loopfunctions:RunLoop("Auto Feed Bees")
        else
            loopfunctions:StopLoop("Auto Feed Bees")
        end
    end
    function main:AnnoyServer()
        if library.flags.annoyserver then
            loopfunctions:RunLoop("Annoy Server")
        else
            loopfunctions:StopLoop("Annoy Server")
        end
    end
    function main:Bhop()
        local UIS = game:GetService("UserInputService")
        if library.flags["bhop"] then
            main.CurrentVel = 0
            RolvePatch = true
            helper = {
                getChar = function()
                    return game.Players.LocalPlayer.Character
                end
            }
            local function checkOnGround(char)
                local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                local part, pos = workspace:FindPartOnRay(ray,char)
                
                if part then
                    if pos then
                        local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                        if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                            return false
                        elseif farness <= 3 then
                            return true
                        end
                    end
                end
            end
            UIS.JumpRequest:Connect(function()
                if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                    main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                end
            end)
            local char = helper.getChar()
            char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                    char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                end
            end)
            spawn(function()
                while true do
                    local char = helper.getChar()
                    if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                        char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                        main.CurrentVel = 0
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                        main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                        if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                    end
                    game:GetService("RunService").Stepped:Wait()
                end
            end)
        end
        game.Players.LocalPlayer.CharacterAdded:Connect(function()
            if library.flags["bhop"] then
                main.CurrentVel = 0
                RolvePatch = false
                helper = {
                    getChar = function()
                        return game.Players.LocalPlayer.Character
                    end
                }
                local function checkOnGround(char)
                    local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                    local part, pos = workspace:FindPartOnRay(ray,char)
                    
                    if part then
                        if pos then
                            local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                            if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                                return false
                            elseif farness <= 3 then
                                return true
                            end
                        end
                    end
                end
                UIS.JumpRequest:Connect(function()
                    if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                        main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                    end
                end)
                local char = helper.getChar()
                char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                    if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                        char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                    end
                end)
                spawn(function()
                    while true do
                        local char = helper.getChar()
                        if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                            char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                            main.CurrentVel = 0
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                            main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                            if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                        end
                        game:GetService("RunService").Stepped:Wait()
                    end
                end)
            end
        end)
    end
    function main:ReJoin()
        game:GetService('TeleportService'):Teleport(game.PlaceId)
    end
    function main:AnnoyingShitToggle()
        if library.flags["annoyshit"] then
            main.uisettings.cursor:SetState(true)
            main.uisettings.watermark:SetState(true)
        else
            main.uisettings.cursor:SetState(false)
            main.uisettings.watermark:SetState(false)
        end
    end
    function main:cursorcolor(val)
        game.CoreGui.uwuware.Cursor.ImageColor3 = val
    end
    function main:StopMsgs()
        if library.flags["msgsoftheday"] then
            loopfunctions:RunLoop("Messages Of The Day")
        else
            loopfunctions:StopLoop("Messages Of The Day")
        end
    end
    function main:Watermark()
        if library.flags["watermark"] then
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = true
        else
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = false
        end
    end
    function main:CursorTog()
        if library.flags["CursorTog"] then
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        else
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        end
    end
    function main:splitlinecolor(val)
        splitline.BackgroundColor3 = val
    end
    function main:splitlinetransparency(val)
        splitline.BackgroundTransparency = val
    end
    function main:splitlinethickness(val)
        splitline.Size = UDim2.new(0, 1917, 0, val*3)
    end
    function main:loadspy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/remote-spys/master/sentinel_spy", true))()
    end
    function main:darkdex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/dex/master/dark%20dex%20v3", true))()
    end
    function main:sentineldex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/vect0rshub/master/sentinel%20dex", true))()
    end
    function main:getupvals()
        for i,v in next, getgc() do
            if type(v) == "function" then
                local upvals = getupvalues(v)
                for i2, v2 in next, upvals do
                    warn(i2, v2)
                end
            end
        end
    end
    function main:Senvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        for i,v in next, getsenv(myInstance) do
            local upvals = getupvalues(v)
            for i2,v2 in next, upvals do
                warn(i2, v2)
            end
        end
    end
    function main:GetGenvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        local module = require(myInstance)
        for i,v in next, module do
            warn(i,v)
        end
    end
    function main:destroyhint()
        hintmsg:Remove()
    end
    Plrs.PlayerAdded:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] == nil then
            main.espsettings.CharAddedEvent[Plr.Name] = Plr.CharacterAdded:connect(function(Char)
                if library.flags["TracersTog"] then
                    main:CreateTracers(Plr)
                end
                if library.flags["ChamsTog"] then
                    main:CreateChams(Plr)
                end
                if library.flags["ESPTog"] then
                    main:RemoveESP(Plr)
                    main:CreateESP(Plr)
                end
                repeat wait() until Char:FindFirstChild("HumanoidRootPart")
                main.TracerMT[Plr.Name] = Char.HumanoidRootPart
            end)
        end
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Joined Your Server")
            main:SystemChat("I Have Joined Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Joined Your Server!")
            main:SystemChat("Smail Has Joined Your Server")
        end
    end)
    Plrs.PlayerRemoving:Connect(function(Plr)
        if main.espsettings.CharAddedEvent[Plr.Name] ~= nil then
            main.espsettings.CharAddedEvent[Plr.Name]:Disconnect()
            main.espsettings.CharAddedEvent[Plr.Name] = nil
        end
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Left Your Server!")
            main:SystemChat("I Have Left Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Left Your Server!")
            main:SystemChat("Smail Has Left Your Server")
        end
        main:RemoveTracers(Plr)
        main:RemoveChams(Plr)
        main:RemoveESP(Plr)
        main.TracerMT[Plr.Name] = nil
    end)
    function main:onPlayerAdded(plr)
        plr.Chatted:Connect(function (msg)
            main.Arguments = { }
            for Argument in string.gmatch(msg,"[^%s]+") do
                table.insert(main.Arguments,Argument)
            end
            if getrenv().creator_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            elseif getrenv().admin_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            end
        end)
    end
    for _, plrs in pairs(game.Players:GetPlayers()) do
        main:onPlayerAdded(plrs)
    end
end
do -- ui
    function ui:Init()
        do -- visuals
            ui.visuals = library:CreateWindow("Visuals")
            ui.visuals.fullbright = ui.visuals:AddToggle({text = "FullBright", flag = "FullBright", callback = function(a)
                library.flags.FullBright = a
                main:fullbright()
            end})
            ui.visuals.espmain = ui.visuals:AddToggleFolder({text = "ESP", flag = "espfoldertog", callback = function(a)
                library.flags["espfoldertog"] = a
                main:MainESP()
            end})
            ui.visuals.esp = ui.visuals.espmain:AddToggle({text = "ESP", flag = "ESPTog", callback = function(a)
                library.flags.ESPEnabled = a
                main:esptoggle()
            end})
            ui.visuals.chams = ui.visuals.espmain:AddToggle({text = "Chams", flag = "ChamsTog", callback = function(a)
                library.flags.ChamsTog = a
                main:chamstoggle()
            end})
            ui.visuals.tracers = ui.visuals.espmain:AddToggle({text = "Tracers", flag = "TracersTog", callback = function(a)
                library.flags.TracersTog = a
                main:tracerstoggle()
            end})
            ui.espsettings = ui.visuals:AddFolder("ESP Settings")
            ui.espsettings:AddColor({text = "Ally Color", flag = "allycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Ally = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Enemy Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Enemy = a
                main:updatecolors()
            end})
            ui.espsettings:AddColor({text = "Neutral Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Neutral = a
                main:updatecolors()
            end})
        end
        do -- character
            ui.character = library:CreateWindow("Character")
            ui.character.charactermain = ui.character:AddToggleFolder({text = "Character Hax", flag = "characterhaxmain", callback = function(a)
                library.flags["characterhaxmain"] = a
                main:CharacterHax()
            end})
            ui.character.superspeed = ui.character.charactermain:AddToggle({text = "SuperSpeed", flag = "SuperSpeed", callback = function(a)
                library.flags.SuperSpeed = a
                main:superspeed()
            end})
            ui.character.superjump = ui.character.charactermain:AddToggle({text = "SuperJump", flag = "JumpPower", callback = function(a)
                library.flags.SuperJump = a
                main:superjump()
            end})
            ui.character.walkspeed = ui.character.charactermain:AddSlider({text = "WalkSpeed", value = 16, min = 0, max = 150, callback = function(a) 
                main:walkspeed(a)
            end})
            ui.character.jumppower = ui.character.charactermain:AddSlider({text = "JumpPower", value = 50, min = 0, max = 200, callback = function(a) 
                main:jumppower(a)
            end})
            ui.character.flymain = ui.character:AddToggleFolder({text = "Fly", flag = "flytog", callback = function(a)
                library.flags["flytog"] = a
                main:flytoggle()
            end})
            ui.character.vehiclefly = ui.character.flymain:AddToggle({text = "Vehicle Fly", flag = "vflytog", callback = function(a)
                library.flags["vflytog"] = a
                main:flytoggle()
            end})
            ui.character.flyspeed = ui.character.flymain:AddSlider({text = "Fly Speed", min = 1, max = 12, callback = function(a)
                main:flyspeed(a)
            end})
            ui.character.bhop = ui.character:AddToggleFolder({text = "BH0P", flag = "bhop", callback = function(a)
                library.flags["bhop"] = a
                main:Bhop()
            end})
            ui.character.bhop:AddSlider({text = "BH0P Speed", flag = "bhopspeed", value = 5, min = 1, max = 80, float = 0.2, callback = function(a)
                main.VelCap = a
            end})
            ui.character.bhop:AddSlider({text = "BH0P Jump Multiplier", flag = "bhopspeed", value = 0.1, min = 0.1, max = 5, float = 0.1, callback = function(a)
                main.JumpBoostAmt = a
            end})
        end
        do -- miscellaneous
            ui.miscellaneous = library:CreateWindow("Miscellaneous")
            ui.miscellaneous.lowgravity = ui.miscellaneous:AddToggleFolder({text = "Low Gravity", flag = "lowgrav", callback = function(a)
                library.flags["lowgrav"] = a
                main:lowgravity()
            end})
            ui.miscellaneous.lowgravity:AddSlider({text = "Gravity", value = 196, min = 0, max = 196, callback = function(a) 
                main:gravity(a)
            end})
            ui.miscellaneous.autofarm = ui.miscellaneous:AddToggleFolder({text = "AutoFarm", flag = "autofarm", callback = function(a)
                library.flags.autofarm = a
                main:AutoFarm()
            end})
            ui.miscellaneous.autocollectpollen = ui.miscellaneous.autofarm:AddToggle({text = "AutoCollect Pollen", flag = "autocollectpollen", callback = function(a)
                library.flags.autocollectpollen = a
                main:AutoCollectPollen()
            end})
            ui.miscellaneous.autosell = ui.miscellaneous.autofarm:AddToggle({text = "AutoSell", flag = "autosell", callback = function(a)
                library.flags.autosell = a
                main:AutoSellPollen()
            end})
            ui.miscellaneous.chosenfield = ui.miscellaneous.autofarm:AddList({text = "Chosen Field", flag = "chosenfield", values = {"Sun Flower Field", "MushRoom Field", "Dandelion Field", "Blue Flower Field", "Clover Field", "Strawberry Field", "Spider Field", "Bamboo Field", "Rose Field", "Forest Field", "Cactus Field", "Pumpkin Patch", "Pineapple Patch", "MountainTop Field", "Coconut Field", "Pepper Field", "Stump Field"}, callback = function(a)
                library.flags.chosenfield = a
            end})
            ui.miscellaneous.autocollecttokens = ui.miscellaneous:AddToggle({text = "Auto Collect Tokens", flag = "autocollecttokens", callback = function(a)
                main:AutoCollectTokens()
            end})
            ui.miscellaneous.autofeedbees = ui.miscellaneous:AddToggleFolder({text = "Auto Feed Bees", flag = "autofeedbees", callback = function(a)
                library.flags.autofeedbees = a
                main:AutoFeedBees()
            end})
            ui.miscellaneous.feedbeeswith = ui.miscellaneous.autofeedbees:AddList({text = "Feed Bees With", flag = "feeder", value = "Favorite", values = {"Auto", "Blueberry", "Pineapple", "Strawberry", "Treat", "SunflowerSeed", "MoonCharm"}, callback = function(a)
                library.flags.feeder = a
            end})
            ui.miscellaneous.feedbeeamount = ui.miscellaneous.autofeedbees:AddBox({text = "Feed Amount", flag = "feedamount", value = "1", callback = function(a)
                library.flags.feedamount = a
            end})
            ui.miscellaneous.autofeeddelay = ui.miscellaneous.autofeedbees:AddSlider({text = "Delay Time", flag = "autofeeddelay", min = 0, max = 5, callback = function(a)
                library.flags.autofeeddelay = a
            end})
            ui.miscellaneous.autogumdrop = ui.miscellaneous:AddToggle({text = "Auto Drop Gum", flag = "autogumdrops", callback = function(a)
                library.flags.autogumdrops = a
                main:AutoGumDrop()
            end})
            ui.miscellaneous.autococonutdrop = ui.miscellaneous:AddToggle({text = "Auto Drop Coconut", flag = "autococonutdrops", callback = function(a)
                library.flags.autococonutdrops = a
                main:AutoCoconutDrop()
            end})
            ui.miscellaneous.autocompletequests = ui.miscellaneous:AddToggle({text = "Auto Complete Quests", flag = "autocompletequests", callback = function(a)
                library.flags.autocompletequests = a
                main:AutoCompleteQuests()
            end})
            ui.miscellaneous.annoyserver = ui.miscellaneous:AddToggle({text = "Annoy Server", flag = "annoyserver", callback = function(a)
                library.flags.annoyserver = a
                main:AnnoyServer()
            end})
            ui.miscellaneous:AddButton({text = "Redeem Codes", callback = function()
                main:ClaimCodes()
            end})
            ui.miscellaneous:AddButton({text = "ReJoin", callback = function()
                main:ReJoin()
            end})
        end
        do -- ui settings
            main.uisettings = library:CreateWindow("UI Settings")
            main.uisettings:AddColor({text = "Cursor Color", flag = "cursorcolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main:cursorcolor(a)
            end})
            if getrenv().creator_accounts[MyPlr.UserId] or getrenv().admin_accounts[MyPlr.UserId] then
                main.uisettings.annoyingstuff = main.uisettings:AddToggleFolder({text = "Shit Smail Hates!", state = true, flag = "annoyshit", callback = function(a)
                    library.flags["annoyshit"] = a
                    main:AnnoyingShitToggle()
                end})
                main.uisettings.cursor = main.uisettings.annoyingstuff:AddToggle({text = "Cursor", state = true, flag = "CursorTog", callback = function(a)
                    library.flags["CursorTog"] = a
                    main:CursorTog()
                end})
                main.uisettings.watermark = main.uisettings.annoyingstuff:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            else
                main.uisettings.watermark = main.uisettings:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            end
            main.uisettings.togglekey = main.uisettings:AddBind({text = "Toggle UI", key = "Q", callback = function() 
                library:Close()
            end})
            main.uisettings.savesettings = main.uisettings:AddButton({text = "Save Settings", callback = function()
                main:SaveSettings()
            end})
            main.uisettings.deletesettings = main.uisettings:AddButton({text = "Delete Settings", callback = function()
                main:DeleteSettings()
            end})
            main.topbar = main.uisettings:AddFolder("Top Bar")
            main.topbar:AddColor({text = "Line Colour", flag = "color", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main:splitlinecolor(a)
            end})
            main.topbar:AddSlider({text = "Transparency", value = 0, min = 0, max = 1, float = 0.1, callback = function(a)
                main:splitlinetransparency(a)
            end})
            main.topbar:AddSlider({text = "Line Thickness", value = 1, min = 1, max = 4, callback = function(a)
                main:splitlinethickness(a)
            end})
        end
        do -- developer options
            if getrenv().creator_accounts[MyPlr.UserId] then
                main.developer = library:CreateWindow("Developer")
                main.developer:AddButton({text = "Remote Spy", callback = function()
                    main:loadspy()
                end})
                main.developer:AddButton({text = "Dark Dex v3", callback = function()
                    main:darkdex()
                end})
                main.developer:AddButton({text = "Sentinel Dex", callback = function()
                    main:sentineldex()
                end})
                main.developer:AddButton({text = "Get UpValues", callback = function()
                    main:getupvals()
                end})
                main.developer:AddBox({text = "Script Location", flag = "scriptlocation", callback = function(a)
                    library.flags["scriptlocation"] = a
                end})
                main.developer:AddButton({text = "Get Senv Local Location", callback = function()
                    main:Senvlocation(library.flags["scriptlocation"])
                end})
                main.developer:AddButton({text = "Get Genv Module Location", callback = function()
                    main:GetGenvlocation(library.flags["scriptlocation"])
                end})
            end
        end
    end
end

main:SystemChat("Okie, gimme a few secs to setup the ui uwu")
ui:Init()
library:Init()
library:Close()
main:load()
main:AutoLoadSettings()
main:Console("Initialization Complete, Enjoy 😎")
main:destroyhint()
library:SendNotification("Vect0rs Hub Loaded "..uiname.." v"..version)
main:SystemChat("Andd Done, Have Fun Or Whatever")
main:SystemChat("Loaded "..uiname)
main:SystemChat("Version "..version)
